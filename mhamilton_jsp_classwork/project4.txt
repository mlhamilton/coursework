Project 4:


Index:
productMain4.1/src/conf/persistence.xml
productMain4.1/src/java/music/business/Product.java
productMain4.1/src/java/music/controllers/OrderController.java
productMain4.1/src/java/music/data/ProductDB.java
productMain4.1/web/META-INF/context.xml
productMain4.1/web/cart/cart.jsp
productMain4.1/web/index.jsp
productMain4.1/web/cart/addPage.jsp
productMain4.1/web/cart/delete.jsp
productMain4.1/web/cart/editPage.jsp




productMain4.1/src/conf/persistence.xml:

<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.1" xmlns="http://xmlns.jcp.org/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd">
  <persistence-unit name="musicStorePU" transaction-type="RESOURCE_LOCAL">
    <provider>org.eclipse.persistence.jpa.PersistenceProvider</provider>
    <exclude-unlisted-classes>false</exclude-unlisted-classes>
    <!--Leftover from musicStore site- prevents sync w Product table
    <shared-cache-mode>ENABLE_SELECTIVE</shared-cache-mode>
    -->
    <properties> 
      <!--
      <property name="javax.persistence.jdbc.url" value="jdbc:mysql://localhost:3306/music"/>
      -->
      
      <property name="javax.persistence.jdbc.url" value="jdbc:mysql://localhost:3306/music_jpa"/>
      
      <property name="javax.persistence.jdbc.driver" value="com.mysql.jdbc.Driver"/>
      <property name="javax.persistence.jdbc.user" value="root"/>
      <property name="javax.persistence.jdbc.password" value="sesame"/>
      <property name="javax.persistence.schema-generation.database.action" value="none"/>
    </properties>
  </persistence-unit>
</persistence>



--End of file--
-----------------------------------------

productMain4.1/src/java/music/business/Product.java:

package music.business;

import java.text.NumberFormat;
import java.io.Serializable;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;

@Entity
public class Product implements Serializable {

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Long productId;    
    private String code;
    private String description;
    private double price;

    public Product() {}

    public Long getId() {
        return productId;
    }

    public void setId(Long productId) {
        this.productId = productId;
    }

    public void setCode(String code) {
        this.code = code;
    }

    public String getCode() {
        return code;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getDescription() {
        return description;
    }

    public String getArtistName() {
        String artistName = 
                description.substring(0, description.indexOf(" - "));
        return artistName;
    }

    public String getAlbumName() {
        String albumName = 
                description.substring(description.indexOf(" - ") + 3);
        return albumName;
    }

    public void setPrice(Double price) {
        this.price = price;
    }

    public double getPrice() {
        return price;
    }

    public String getPriceCurrencyFormat() {
        NumberFormat currency = NumberFormat.getCurrencyInstance();
        return currency.format(price);
    }

    public String getImageURL() {
        String imageURL = "/musicStore/images/" + code + "_cover.jpg";
        return imageURL;
    }

    public String getProductType() {
        return "Audio CD";
    }
}


--End of file--
-----------------------------------------

productMain4.1/src/java/music/controllers/OrderController.java:

package music.controllers;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.mail.MessagingException;
import javax.servlet.ServletException;
import javax.servlet.http.*;

import music.business.*;
import music.data.*;
import music.util.*;

public class OrderController extends HttpServlet {

    private static final String defaultURL = "/cart/cart.jsp";
    private static final String editItemURL = "/cart/editPage.jsp";

    @Override
    public void doPost(HttpServletRequest request,
            HttpServletResponse response)
            throws ServletException, IOException {
        String requestURI = request.getRequestURI();
        String url = "";

        if (requestURI.endsWith("/showCart")) {
            url = showCart(request, response);
        } else if (requestURI.endsWith("/addItem")) {
            url = addItem(request, response);
        } else if (requestURI.endsWith("/updateItem")) {
            url = updateItem(request, response);
        } else if (requestURI.endsWith("/removeItem")) {
            url = removeItem(request, response);
        } else if (requestURI.endsWith("/displayUser")) {
            url = "/cart/user.jsp";
        } else if (requestURI.endsWith("/displayCreditCard")) {
            url = "/cart/credit_card.jsp";
        } else if (requestURI.endsWith("/edit")) {
            url = edit(request, response);
        } else if (requestURI.endsWith("/editItem")) {
            url = editItem(request, response);
        }
        
        getServletContext()
                .getRequestDispatcher(url)
                .forward(request, response);
    }

    @Override
    public void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        String requestURI = request.getRequestURI();
        String url = defaultURL;

        if (requestURI.endsWith("/showCart")) {
            showCart(request, response);
        } else if (requestURI.endsWith("/addPage")) {
            url = "/cart/addPage.jsp";
        } else if (requestURI.endsWith("/addItem")) {
            addItem(request, response);
        } else if (requestURI.endsWith("/edit")) {
            url = "/cart/editPage.jsp";
        }

        getServletContext()
                .getRequestDispatcher(url)
                .forward(request, response);
    }

    private String showCart(HttpServletRequest request,
            HttpServletResponse response) {

        List<Product> products = new ArrayList<Product>();
        products = ProductDB.selectProducts();

        //Should I be storing this in the session like this?
        request.getSession().setAttribute("products", products);

        return defaultURL;
    }

    private String addItem(HttpServletRequest request,
            HttpServletResponse response) {

        String code = "";
        String description = "";
        Double price = 0.00;
        Product product = new Product();
        // Create product object from request
        code = request.getParameter("code");
        description = request.getParameter("description");
        String newPrice = request.getParameter("price");
        price = Double.parseDouble(newPrice);

        product.setCode(code);
        product.setDescription(description);
        product.setPrice(price);

        //Send product to ProductDB to add to DB
        ProductDB.insert(product);

        return "/order/showCart";
    }

    private String updateItem(HttpServletRequest request,
            HttpServletResponse response) {

        String productCode = request.getParameter("productCode");
        HttpSession session = request.getSession();
        Cart cart = (Cart) session.getAttribute("cart");
        Product product = ProductDB.selectProduct(productCode);
        ProductDB.update(product);

        return defaultURL;
    }

    private String removeItem(HttpServletRequest request,
            HttpServletResponse response) {
        HttpSession session = request.getSession();
        Cart cart = (Cart) session.getAttribute("cart");
        String productCode = request.getParameter("productCode");
        Product product = ProductDB.selectProduct(productCode);
        ProductDB.delete(product);
        return "/order/showCart";
    }

    private String edit(HttpServletRequest request,
            HttpServletResponse response) {

        // Determine product code
        HttpSession session = request.getSession();
        String pcode = request.getParameter("productCode");

        // Get product from db and unpack values
        Product product = ProductDB.selectProduct(pcode);
        Long id = product.getId();
        String code = product.getCode();
        String description = product.getDescription();
        Double price = product.getPrice();

        // Set to product
        product.setId(id);
        product.setDescription(description);
        product.setPrice(price);
        product.setCode(code);

        // Send product
        session.setAttribute("product", product);

        return editItemURL;
    }

    private String editItem(HttpServletRequest request,
            HttpServletResponse response) {

        HttpSession session = request.getSession();

        // Get values from jsp
        String pid = request.getParameter("id");
        Long id = Long.parseLong(pid);
        String code = request.getParameter("code");
        String description = request.getParameter("description");
        String newPrice = request.getParameter("price");
        Double price = Double.parseDouble(newPrice);

        // Check if fields are empty
        if (code == null || description == null || newPrice == null
                || code.isEmpty() || description.isEmpty() || newPrice.isEmpty()) {
            String message = "Please fill out the required fields.";
            String star = "*";
            session.setAttribute("message", message);
            session.setAttribute("star", star);
        } else {

            //Updates object info in JSP
            Product product = new Product();
            product.setId(id);
            product.setDescription(description);
            product.setPrice(price);
            product.setCode(code);

            //Call update SQL method
            ProductDB.update(product);

            // Set the attributes products so that jsp has info about it
            session.setAttribute("product", product);

            //Update message
            String updated_message = "Record Updated!";
            session.setAttribute("updated_message", updated_message);
        }
        return editItemURL;
    }
}



--End of file--
-----------------------------------------

productMain4.1/src/java/music/data/ProductDB.java:

package music.data;

import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.EntityTransaction;
import javax.persistence.NoResultException;
import javax.persistence.TypedQuery;

import music.business.Product;

public class ProductDB {

    public static Product selectProduct(String code) {
        EntityManager em = DBUtil.getEmFactory().createEntityManager();
        String qString = "SELECT p FROM Product p " +
                "WHERE p.code = :code";
        TypedQuery<Product> q = em.createQuery(qString, Product.class);
        q.setParameter("code", code);
        Product result = null;
        try {
            result = q.getSingleResult();
        } catch (NoResultException ex) {
            return null;
        } finally {
            em.close();
        }
        
        return (Product)result;
    }
    
    public static Product selectProduct(long productId) {
        EntityManager em = DBUtil.getEmFactory().createEntityManager();
        
        return em.find(Product.class, productId);
    }
    
    public static List<Product> selectProducts() {
        EntityManager em = DBUtil.getEmFactory().createEntityManager();
        String qString = "SELECT p from Product p";
        TypedQuery<Product> q = em.createQuery(qString, Product.class);
        List<Product> results = null;
        try {
            results = q.getResultList();
        } catch (NoResultException ex) {
            return null;
        } finally {
            em.close();
        }
        
        return results;
    }
    
    public static void insert(Product product) {
        EntityManager em = DBUtil.getEmFactory().createEntityManager();
        EntityTransaction trans = em.getTransaction();
        trans.begin();
        try {
            em.persist(product);
            trans.commit();
        } catch (Exception e) {
            System.out.println(e);
            trans.rollback();
        } finally {
            em.close();
        }
    }
    public static void update(Product product) {
        EntityManager em = DBUtil.getEmFactory().createEntityManager();
        EntityTransaction trans = em.getTransaction();
        trans.begin();
        try {
            //em.persist(product);
            em.merge(product);
            
            trans.commit();
        } catch (Exception e) {
            System.out.println(e);
            trans.rollback();
        } finally {
            em.close();
        }
    }    
    public static void delete(Product product) {
        EntityManager em = DBUtil.getEmFactory().createEntityManager();
        EntityTransaction trans = em.getTransaction();
        trans.begin();
        try {
            em.remove(em.merge(product));
            trans.commit();
        } catch (Exception e) {
            System.out.println(e);
            trans.rollback();
        } finally {
            em.close();
        }
              
    }
}


--End of file--
-----------------------------------------

productMain4.1/web/META-INF/context.xml:

<?xml version="1.0" encoding="UTF-8"?>
<Context path="/productMain4.1">
  <!-- the murach database that contains admin usernames and passwords -->
  <Resource auth="Container" driverClassName="com.mysql.jdbc.Driver" logAbandoned="true" maxActive="100" maxIdle="30" maxWait="10000" name="jdbc/murachDB" password="sesame" removeAbandoned="true" removeAbandonedTimeout="60" type="javax.sql.DataSource" url="jdbc:mysql://localhost:3306/murach?autoReconnect=true" username="root"/>
  <Realm className="org.apache.catalina.realm.DataSourceRealm" dataSourceName="jdbc/murachDB" debug="99" localDataSource="true" roleNameCol="Rolename" userCredCol="Password" userNameCol="Username" userRoleTable="UserRole" userTable="UserPass"/>
</Context>



--End of file--
-----------------------------------------

productMain4.1/web/cart/cart.jsp:


<section class="cart">
    <%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>

    <h1>Products</h1>
    <c:choose>
        <c:when test="${emptyCart != null}">
            <p>Your cart is empty.</p>
        </c:when>
        <c:otherwise>
            <table>
                <tr>
                    <th>Code</th>   
                    <th>Description</th>
                    <th>Price</th>
                    <th>&nbsp;</th>
                </tr>
                <c:forEach var="item" items="${products}">
                    <tr class="cart_row">
                        <td>${item.code}</td>
                        <td>${item.description}</td>
                        <td>${item.priceCurrencyFormat}</td>
                        <td>
                            <form action="<c:url value='/order/edit'/>" method="post">
                                <input type="hidden" name="productCode" 
                                       value="<c:out value='${item.code}'/>">
                                <input type="submit" value="Edit">
                            </form>                  
                        </td>
                        <td>
                            <form action="<c:url value='/order/removeItem'/>" method="post">
                                <input type="hidden" name="productCode" 
                                       value="<c:out value='${item.code}'/>">
                                <input type="submit" value="Remove">
                            </form>                  
                        </td>
                    </tr>
                </c:forEach>
            </table>
        </c:otherwise>
    </c:choose>


    <!--Go to add products page-->          
    <form action="<c:url value='/order/addPage'/>" method="get" id="float_left">
        <input type="submit" value="Add Product">
    </form>


    <%--<c:if test="${emptyCart == null}">
        <!-- Connection is NOT SECURE.  For testing only. -->
        <form action="<c:url value='/order/checkUser'/>" method="post">
          <input type="submit" value="Checkout">
        </form>
        <!-- Connection is SECURE.  Before you can use it, you need to configure 
        a secure connection on your system as described in chapter 15, comment
        out the previous form, and remove the comments from the following form. -->
        <!--
        <form action="${absolutePathSecure}/order/checkUser" method="post">
          <input type="submit" value="Checkout">
        </form>
        -->
    </c:if>--%>


</section>



--End of file--
-----------------------------------------

productMain4.1/web/index.jsp:

<%@page contentType="text/html" pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        <title>Product Maintenance - Index</title>
    </head>
    <body>
        <h1>Product Maintenance</h1>
        <form action="<c:url value='/order/showCart'/>" method="get" id="float_left">
            <input type="submit" value="View Products">
        </form>
    </body>
</html>


--End of file--
-----------------------------------------

productMain4.1/web/cart/addPage.jsp:

<section class="add">
    <%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>

    <html>
        <head>
            <meta charset="utf-8">
            <title>Product Maintenance - Product</title>
            <link rel="stylesheet" href="styles/main.css" type="text/css"/>
        </head>


        <body>
            <h1>Product - Add</h1>
            <p>* marks required fields</p>
            <i>${message}</i>

            <form action="<c:url value='/order/addItem'/>" method="post" id="float_left">
                <label class="pad_top"> Code: </label>
                <input type="text" name="code" value="${product.code}" required> ${star}<br/>
                <label class="pad_top"> Description: </label>
                <input type="text" name="description" value="${product.description}" required> ${star}<br/>
                <label class="pad_top"> Price: </label>
                <input type="text" name="price" value="" required> ${star}<br/>
                <input type="hidden" name="action" value="addItem">
                <input type="submit" value="Add Product">
            </form>
        </body>
    </html>


--End of file--
-----------------------------------------

productMain4.1/web/cart/delete.jsp:

<!DOCTYPE html>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<html>
<head>
    <meta charset="utf-8">
    <title>Product Maintenance - Delete</title>
    <link rel="stylesheet" href="styles/main.css" type="text/css"/>
</head>
<body>
    <h1>Are you sure you want to delete this product?</h1>
    
<form action="productMaint" method="post">
    <table>
        <tr>
            <td>Code: </td><td>${product.code}</td>
        </tr>
        <tr>
            <td>Description:</td><td>${product.description}</td>
        </tr>
        <tr>
            <td>Price:</td><td>${product.price}</td>
        </tr>
    </table>
    
  <input type="hidden" name="action" value="yesDelete">
  <input type="submit" value="Yes">
  <input type="hidden" name="action" value="displayProducts">
  <input type="submit" value="No">
</form>
    
</body>
</html>


--End of file--
-----------------------------------------

productMain4.1/web/cart/editPage.jsp:

<!DOCTYPE html>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>

<html>
    <head>
        <meta charset="utf-8">
        <title>Product Maintenance - Product</title>
        <link rel="stylesheet" href="styles/main.css" type="text/css"/>
    </head>
    <body>
        <h1>Product - Edit</h1>
        <i>${message}</i>
        <form action="<c:url value='/order/editItem'/>" method="post" id="float_left">
            <label class="pad_top"> Code: </label>
            <input type="text" name="code" value="${product.code}" readonly><a style="color:red">${star}</a><br/>
            <label class="pad_top"> Description: </label>
            <input type="text" name="description" value="${product.description}" required><br/>
            <label class="pad_top"> Price: </label>
            <input type="text" name="price" value="${product.price}" required><br/>

            <input type="hidden" name="action" value="editItem">

            <input type="hidden" name="id"  value="${product.id}">
            <label>Product ID = ${product.id}</label> <br/>
            <input type="submit" value="Update Product">
        </form> 
        <form action="<c:url value='/order/showCart'/>" method="get">
            <input type="hidden" name="action" value="showCart">
            <input type="submit" value="Show Cart">
        </form>
        <p style="color:red">${updated_message}</p>
    </body>
</html>


--End of file--
-----------------------------------------
